{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleAuth, _React$Component);\n\n  function GoogleAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedIn: null\n    };\n\n    _this.onAuthChange = function () {\n      _this.setState({\n        isSignedIn: _this.auth.isSignedIn.get()\n      });\n    };\n\n    _this.onSignInClick = function () {\n      _this.auth.signIn();\n    };\n\n    _this.onSignOutClick = function () {\n      _this.auth.signOut();\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"componentDidMount\",\n    // every time the component is first rendered to the screen...\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // ...we try to load a portion of the Google library: when the load is\n      // complete we call the arrow function we pass to load as second parameter\n      window.gapi.load('client:auth2', function () {\n        window.gapi.client.init({\n          clientId: '497791044790-3oqctgpfli9i1vht92s0bg4a1bbcokn1.apps.googleusercontent.com',\n          scope: 'email'\n        }).then(function () {\n          // this code will be called only AFTER the library successfully in itialized itself\n          // save the auth object with all the methods we need as a property in our class\n          _this2.auth = window.gapi.auth2.getAuthInstance();\n\n          _this2.setState({\n            isSignedIn: _this2.auth.isSignedIn.get()\n          }); // create a listener to update the state every time the auth status changes\n\n\n          _this2.auth.isSignedIn.listen(_this2.onAuthChange);\n        });\n      });\n    }\n  }, {\n    key: \"renderAuthButton\",\n    value: function renderAuthButton() {\n      if (this.state.isSignedIn === null) {\n        return React.createElement(\"div\", {\n          className: \"ui active inline medium loader\",\n          style: {\n            paddingTop: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      } else if (this.state.isSignedIn) {\n        return React.createElement(\"button\", {\n          onClick: this.onSignOutClick,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), \"Sign out\");\n      } else {\n        return React.createElement(\"button\", {\n          onClick: this.onSignInClick,\n          className: \"ui blue google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), \"Sign in with Google\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.renderAuthButton());\n    }\n  }]);\n\n  return GoogleAuth;\n}(React.Component);\n\nexport default connect(null, {\n  signIn: signIn,\n  signOut: signOut\n})(GoogleAuth);","map":{"version":3,"sources":["C:\\Users\\manca\\Documents\\React\\streams\\client\\src\\components\\GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","state","isSignedIn","onAuthChange","setState","auth","get","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","paddingTop","renderAuthButton","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;IAEMC,U;;;;;;;;;;;;;;;;;UAELC,K,GAAQ;AAAEC,MAAAA,UAAU,EAAE;AAAd,K;;UAwBRC,Y,GAAe,YAAM;AACpB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAE,MAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,OAAd;AACA,K;;UAGDC,a,GAAgB,YAAM;AACrB,YAAKF,IAAL,CAAUP,MAAV;AACA,K;;UAGDU,c,GAAiB,YAAM;AACtB,YAAKH,IAAL,CAAUN,OAAV;AACA,K;;;;;;;AAlCD;wCACoB;AAAA;;AACnB;AACA;AACAU,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,YAAM;AACtCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACvBC,UAAAA,QAAQ,EAAE,0EADa;AAEvBC,UAAAA,KAAK,EAAE;AAFgB,SAAxB,EAGGC,IAHH,CAGQ,YAAM;AACb;AAEA;AACA,UAAA,MAAI,CAACX,IAAL,GAAYI,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;;AACA,UAAA,MAAI,CAACd,QAAL,CAAc;AAAEF,YAAAA,UAAU,EAAE,MAAI,CAACG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,WAAd,EALa,CAOb;;;AACA,UAAA,MAAI,CAACD,IAAL,CAAUH,UAAV,CAAqBiB,MAArB,CAA4B,MAAI,CAAChB,YAAjC;AACA,SAZD;AAaA,OAdD;AAeA;;;uCAkBkB;AAClB,UAAI,KAAKF,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AACnC,eAAO;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAgD,UAAA,KAAK,EAAE;AAAEkB,YAAAA,UAAU,EAAC;AAAb,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,OAFD,MAGK,IAAI,KAAKnB,KAAL,CAAWC,UAAf,EAA2B;AAC/B,eACC;AAAQ,UAAA,OAAO,EAAE,KAAKM,cAAtB;AAAsC,UAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,aADD;AAMA,OAPI,MAQA;AACJ,eACC;AAAQ,UAAA,OAAO,EAAE,KAAKD,aAAtB;AAAqC,UAAA,SAAS,EAAC,uBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,wBADD;AAMA;AACD;;;6BAEQ;AACR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKc,gBAAL,EAAN,CADD;AAGA;;;;EAnEuBzB,KAAK,CAAC0B,S;;AAuE/B,eAAezB,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,MAAM,EAANA,MAAF;AAAUC,EAAAA,OAAO,EAAPA;AAAV,CAAP,CAAP,CAAmCC,UAAnC,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n\r\n\tstate = { isSignedIn: null };\r\n\r\n\t// every time the component is first rendered to the screen...\r\n\tcomponentDidMount() {\r\n\t\t// ...we try to load a portion of the Google library: when the load is\r\n\t\t// complete we call the arrow function we pass to load as second parameter\r\n\t\twindow.gapi.load('client:auth2', () => {\r\n\t\t\twindow.gapi.client.init({\r\n\t\t\t\tclientId: '497791044790-3oqctgpfli9i1vht92s0bg4a1bbcokn1.apps.googleusercontent.com',\r\n\t\t\t\tscope: 'email'\r\n\t\t\t}).then(() => {\r\n\t\t\t\t// this code will be called only AFTER the library successfully in itialized itself\r\n\r\n\t\t\t\t// save the auth object with all the methods we need as a property in our class\r\n\t\t\t\tthis.auth = window.gapi.auth2.getAuthInstance();\r\n\t\t\t\tthis.setState({ isSignedIn: this.auth.isSignedIn.get() });\r\n\r\n\t\t\t\t// create a listener to update the state every time the auth status changes\r\n\t\t\t\tthis.auth.isSignedIn.listen(this.onAuthChange);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tonAuthChange = () => {\r\n\t\tthis.setState({ isSignedIn: this.auth.isSignedIn.get() });\r\n\t};\r\n\r\n\r\n\tonSignInClick = () => {\r\n\t\tthis.auth.signIn();\r\n\t};\r\n\r\n\r\n\tonSignOutClick = () => {\r\n\t\tthis.auth.signOut();\r\n\t};\r\n\r\n\r\n\trenderAuthButton() {\r\n\t\tif (this.state.isSignedIn === null) {\r\n\t\t\treturn <div className=\"ui active inline medium loader\" style={{ paddingTop:10 }}></div>\r\n\t\t}\r\n\t\telse if (this.state.isSignedIn) {\r\n\t\t\treturn(\r\n\t\t\t\t<button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n\t\t\t\t\t<i className=\"google icon\" />\r\n\t\t\t\t\tSign out\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn(\r\n\t\t\t\t<button onClick={this.onSignInClick} className=\"ui blue google button\">\r\n\t\t\t\t\t<i className=\"google icon\" />\r\n\t\t\t\t\tSign in with Google\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>{this.renderAuthButton()}</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(null, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}