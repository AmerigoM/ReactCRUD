{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"renderAdminButtons\",\n    value: function renderAdminButtons(stream) {\n      if (stream.userId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \"EDIT/DELETE\");\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this = this;\n\n      return this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, stream.description)), _this.renderAdminButtons(stream));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["C:\\Users\\manca\\Documents\\React\\streams\\client\\src\\components\\streams\\StreamList.js"],"names":["React","connect","fetchStreams","StreamList","props","stream","userId","currentUserId","streams","map","id","title","description","renderAdminButtons","renderList","Component","mapStateToProps","state","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,U;;;;;;;;;;;;;wCAEe;AACnB,WAAKC,KAAL,CAAWF,YAAX;AACA;;;uCAGkBG,M,EAAQ;AAC1B,UAAGA,MAAM,CAACC,MAAP,KAAkB,KAAKF,KAAL,CAAWG,aAAhC,EAA+C;AAC9C,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD;AAKA;AACD;;;iCAGY;AAAA;;AACZ,aAAO,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuB,UAAAJ,MAAM,EAAI;AACvC,eACC;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACK,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAG,UAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAEC;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEL,MAAM,CAACM,KADT,EAEC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEN,MAAM,CAACO,WADT,CAFD,CAFD,EAQE,KAAI,CAACC,kBAAL,CAAwBR,MAAxB,CARF,CADD;AAYA,OAbM,CAAP;AAcA;;;6BAGQ;AACR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKS,UAAL,EADF,CAFD,CADD;AAQA;;;;EA7CuBd,KAAK,CAACe,S;;AA8C9B;;AAGD,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,SAAO;AACNT,IAAAA,OAAO,EAAEU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,OAApB,CADH;AAEND,IAAAA,aAAa,EAAEU,KAAK,CAACG,IAAN,CAAWd;AAFpB,GAAP;AAIA,CALD;;AAQA,eAAeL,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA,YAAY,EAAZA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStreams } from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchStreams();\r\n\t}\r\n\r\n\r\n\trenderAdminButtons(stream) {\r\n\t\tif(stream.userId === this.props.currentUserId) {\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\tEDIT/DELETE\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trenderList() {\r\n\t\treturn this.props.streams.map(stream => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"item\" key={stream.id}>\r\n\t\t\t\t\t<i className=\"large middle aligned icon camera\" />\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t{stream.title}\r\n\t\t\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t\t\t{stream.description}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{this.renderAdminButtons(stream)}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Streams</h2>\r\n\t\t\t\t<div className=\"ui celled list\">\r\n\t\t\t\t\t{this.renderList()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn { \r\n\t\tstreams: Object.values(state.streams),\r\n\t\tcurrentUserId: state.auth.userId\r\n\t };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}