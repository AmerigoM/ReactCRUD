{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function () {};\n\n    return _this;\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"loading\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Edit a Stream\"), React.createElement(StreamForm, {\n        initialValues: {\n          title: 'EDIT ME',\n          description: 'CHANGE ME TOO'\n        },\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  editStream: editStream\n})(StreamEdit);","map":{"version":3,"sources":["C:\\Users\\manca\\Documents\\React\\streams\\client\\src\\components\\streams\\StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","onSubmit","props","match","params","id","stream","title","description","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,U;;;;;;;;;;;;;;;;;;UAOLC,Q,GAAW,YAAM,CAEhB,C;;;;;;;wCAPmB;AACnB,WAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACA;;;6BAQQ;AACR,UAAG,CAAC,KAAKH,KAAL,CAAWI,MAAf,EAAuB;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACA;;AAED,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,EAEC,oBAAC,UAAD;AAAY,QAAA,aAAa,EAAE;AAAEC,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,WAAW,EAAE;AAAjC,SAA3B;AAA8E,QAAA,QAAQ,EAAE,KAAKP,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADD;AAMA;;;;EAvBuBN,KAAK,CAACc,S;;AA2B/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC5C,SAAO;AACNN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADF,GAAP;AAGA,CAJD;;AAOA,eAAeT,OAAO,CACrBc,eADqB,EAErB;AAAEb,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,UAAU,EAAVA;AAAf,CAFqB,CAAP,CAGbE,UAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component{\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchStream(this.props.match.params.id);\r\n\t}\r\n\r\n\r\n\tonSubmit = () => {\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tif(!this.props.stream) {\r\n\t\t\treturn <div>loading</div>;\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Edit a Stream</h3>\r\n\t\t\t\t<StreamForm initialValues={{ title: 'EDIT ME', description: 'CHANGE ME TOO'}} onSubmit={this.onSubmit} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn {\r\n\t\tstream: state.streams[ownProps.match.params.id]\r\n\t};\r\n};\r\n\r\n\r\nexport default connect(\r\n\tmapStateToProps, \r\n\t{ fetchStream, editStream }\r\n)(StreamEdit);"]},"metadata":{},"sourceType":"module"}