{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\manca\\\\Documents\\\\React\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n// =====================================\n// ACTION CREATORS\n// =====================================\nimport streams from '../api/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return streams.post('/streams', formValues);\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetch_streams = function fetch_streams() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return streams.get('/streams');\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: FETCH_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["C:\\Users\\manca\\Documents\\React\\streams\\client\\src\\actions\\index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","post","response","data","fetch_streams","get"],"mappings":";;AAAA;AACA;AACA;AACA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SACCC,OADD,EAECC,QAFD,EAGCC,aAHD,EAICC,aAJD,EAKCC,YALD,EAMCC,aAND,EAOCC,WAPD,QAQO,SARP;AAUA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAAY;AACjC,SAAO;AACNC,IAAAA,IAAI,EAAET,OADA;AAENU,IAAAA,OAAO,EAAEF;AAFH,GAAP;AAIA,CALM;AAQP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC5B,SAAO;AACNF,IAAAA,IAAI,EAAER;AADA,GAAP;AAGA,CAJM;AAOP,OAAO,IAAMW,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAgB;AAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBf,OAAO,CAACgB,IAAR,CAAa,UAAb,EAAyBF,UAAzB,CADjB;;AAAA;AACAG,gBAAAA,QADA;AAENF,gBAAAA,QAAQ,CAAC;AACRL,kBAAAA,IAAI,EAAEP,aADE;AAERQ,kBAAAA,OAAO,EAAEM,QAAQ,CAACC;AAFV,iBAAD,CAAR;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,CARM;AAWP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAMJ,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACXf,OAAO,CAACoB,GAAR,CAAY,UAAZ,CADW;;AAAA;AAC5BH,gBAAAA,QAD4B;AAElCF,gBAAAA,QAAQ,CAAC;AACRL,kBAAAA,IAAI,EAAEL,YADE;AAEPM,kBAAAA,OAAO,EAAEM,QAAQ,CAACC;AAFX,iBAAD,CAAR;;AAFkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB","sourcesContent":["// =====================================\r\n// ACTION CREATORS\r\n// =====================================\r\nimport streams from '../api/streams';\r\nimport { \r\n\tSIGN_IN,\r\n\tSIGN_OUT, \r\n\tCREATE_STREAM,\r\n\tFETCH_STREAMS,\r\n\tFETCH_STREAM,\r\n\tDELETE_STREAM,\r\n\tEDIT_STREAM \r\n} from './types';\r\n\r\nexport const signIn = (userId) => {\r\n\treturn {\r\n\t\ttype: SIGN_IN,\r\n\t\tpayload: userId\r\n\t};\r\n};\r\n\r\n\r\nexport const signOut = () => {\r\n\treturn {\r\n\t\ttype: SIGN_OUT\r\n\t};\r\n};\r\n\r\n\r\nexport const createStream = (formValues) => {\r\n\treturn async (dispatch) => {\r\n\t\tconst response = await streams.post('/streams', formValues);\r\n\t\tdispatch({\r\n\t\t\ttype: CREATE_STREAM,\r\n\t\t\tpayload: response.data\r\n\t\t});\r\n\t};\r\n};\r\n\r\n\r\nexport const fetch_streams = () => async dispatch => {\r\n\tconst response = await streams.get('/streams');\r\n\tdispatch({\r\n\t\ttype: FETCH_STREAM,\r\n\t\t payload: response.data\r\n\t});\r\n};"]},"metadata":{},"sourceType":"module"}